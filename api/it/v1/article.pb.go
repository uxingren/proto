// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: it/v1/article.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetArticleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
}

func (x *GetArticleInfoRequest) Reset() {
	*x = GetArticleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoRequest) ProtoMessage() {}

func (x *GetArticleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoRequest.ProtoReflect.Descriptor instead.
func (*GetArticleInfoRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{0}
}

func (x *GetArticleInfoRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetArticleInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	Userid     uint32   `protobuf:"varint,2,opt,name=userid,proto3" json:"userid"`
	Parentid   uint32   `protobuf:"varint,3,opt,name=parentid,proto3" json:"parentid"`
	Catid      uint32   `protobuf:"varint,4,opt,name=catid,proto3" json:"catid"`
	Title      string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`
	Author     string   `protobuf:"bytes,6,opt,name=author,proto3" json:"author"`
	Status     uint32   `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
	Ctime      int64    `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime"`
	Content    string   `protobuf:"bytes,9,opt,name=content,proto3" json:"content"`
	Avatar     string   `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar"`
	Keyword    []string `protobuf:"bytes,11,rep,name=keyword,proto3" json:"keyword"`
	BigCatname string   `protobuf:"bytes,12,opt,name=big_catname,json=bigCatname,proto3" json:"big_catname"`
	Catname    string   `protobuf:"bytes,13,opt,name=catname,proto3" json:"catname"`
	UpdateTime string   `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
	ColumnUrl  string   `protobuf:"bytes,15,opt,name=column_url,json=columnUrl,proto3" json:"column_url"`
	Url        string   `protobuf:"bytes,16,opt,name=url,proto3" json:"url"`
	BigCaturl  string   `protobuf:"bytes,17,opt,name=big_caturl,json=bigCaturl,proto3" json:"big_caturl"`
	Caturl     string   `protobuf:"bytes,18,opt,name=caturl,proto3" json:"caturl"`
}

func (x *GetArticleInfoReply) Reset() {
	*x = GetArticleInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoReply) ProtoMessage() {}

func (x *GetArticleInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoReply.ProtoReflect.Descriptor instead.
func (*GetArticleInfoReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{1}
}

func (x *GetArticleInfoReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetArticleInfoReply) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *GetArticleInfoReply) GetParentid() uint32 {
	if x != nil {
		return x.Parentid
	}
	return 0
}

func (x *GetArticleInfoReply) GetCatid() uint32 {
	if x != nil {
		return x.Catid
	}
	return 0
}

func (x *GetArticleInfoReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticleInfoReply) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetArticleInfoReply) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetArticleInfoReply) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GetArticleInfoReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetArticleInfoReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetArticleInfoReply) GetKeyword() []string {
	if x != nil {
		return x.Keyword
	}
	return nil
}

func (x *GetArticleInfoReply) GetBigCatname() string {
	if x != nil {
		return x.BigCatname
	}
	return ""
}

func (x *GetArticleInfoReply) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *GetArticleInfoReply) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *GetArticleInfoReply) GetColumnUrl() string {
	if x != nil {
		return x.ColumnUrl
	}
	return ""
}

func (x *GetArticleInfoReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetArticleInfoReply) GetBigCaturl() string {
	if x != nil {
		return x.BigCaturl
	}
	return ""
}

func (x *GetArticleInfoReply) GetCaturl() string {
	if x != nil {
		return x.Caturl
	}
	return ""
}

type GetArticleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset   uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Keyword  string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword"`
	BigCatid uint32 `protobuf:"varint,4,opt,name=big_catid,json=bigCatid,proto3" json:"big_catid"`
	Catid    uint32 `protobuf:"varint,5,opt,name=catid,proto3" json:"catid"`
	Userid   uint32 `protobuf:"varint,6,opt,name=userid,proto3" json:"userid"`
	Status   uint32 `protobuf:"varint,7,opt,name=status,proto3" json:"status"`
}

func (x *GetArticleListRequest) Reset() {
	*x = GetArticleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListRequest) ProtoMessage() {}

func (x *GetArticleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListRequest.ProtoReflect.Descriptor instead.
func (*GetArticleListRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{2}
}

func (x *GetArticleListRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetArticleListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetArticleListRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetArticleListRequest) GetBigCatid() uint32 {
	if x != nil {
		return x.BigCatid
	}
	return 0
}

func (x *GetArticleListRequest) GetCatid() uint32 {
	if x != nil {
		return x.Catid
	}
	return 0
}

func (x *GetArticleListRequest) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *GetArticleListRequest) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetArticleListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                         `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	List  []*GetArticleListReply_Article `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`
}

func (x *GetArticleListReply) Reset() {
	*x = GetArticleListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReply) ProtoMessage() {}

func (x *GetArticleListReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReply.ProtoReflect.Descriptor instead.
func (*GetArticleListReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{3}
}

func (x *GetArticleListReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetArticleListReply) GetList() []*GetArticleListReply_Article {
	if x != nil {
		return x.List
	}
	return nil
}

type GetColumnArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BigCatid uint32 `protobuf:"varint,1,opt,name=big_catid,json=bigCatid,proto3" json:"big_catid"`
	Limit    uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
}

func (x *GetColumnArticleRequest) Reset() {
	*x = GetColumnArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnArticleRequest) ProtoMessage() {}

func (x *GetColumnArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnArticleRequest.ProtoReflect.Descriptor instead.
func (*GetColumnArticleRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{4}
}

func (x *GetColumnArticleRequest) GetBigCatid() uint32 {
	if x != nil {
		return x.BigCatid
	}
	return 0
}

func (x *GetColumnArticleRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UserTodayPostNumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid uint32 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid"`
}

func (x *UserTodayPostNumRequest) Reset() {
	*x = UserTodayPostNumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTodayPostNumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTodayPostNumRequest) ProtoMessage() {}

func (x *UserTodayPostNumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTodayPostNumRequest.ProtoReflect.Descriptor instead.
func (*UserTodayPostNumRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{5}
}

func (x *UserTodayPostNumRequest) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

type UserTodayPostNumReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num uint32 `protobuf:"varint,1,opt,name=num,proto3" json:"num"`
}

func (x *UserTodayPostNumReply) Reset() {
	*x = UserTodayPostNumReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTodayPostNumReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTodayPostNumReply) ProtoMessage() {}

func (x *UserTodayPostNumReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTodayPostNumReply.ProtoReflect.Descriptor instead.
func (*UserTodayPostNumReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{6}
}

func (x *UserTodayPostNumReply) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type CreateArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid  uint32 `protobuf:"varint,1,opt,name=userid,proto3" json:"userid"`
	Catid   uint32 `protobuf:"varint,2,opt,name=catid,proto3" json:"catid"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content"`
	Keyword string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword"`
	Author  string `protobuf:"bytes,6,opt,name=author,proto3" json:"author"`
}

func (x *CreateArticleRequest) Reset() {
	*x = CreateArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleRequest) ProtoMessage() {}

func (x *CreateArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateArticleRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{7}
}

func (x *CreateArticleRequest) GetUserid() uint32 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *CreateArticleRequest) GetCatid() uint32 {
	if x != nil {
		return x.Catid
	}
	return 0
}

func (x *CreateArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticleRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CreateArticleRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type CreateArticleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
}

func (x *CreateArticleReply) Reset() {
	*x = CreateArticleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleReply) ProtoMessage() {}

func (x *CreateArticleReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleReply.ProtoReflect.Descriptor instead.
func (*CreateArticleReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{8}
}

func (x *CreateArticleReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ArticleESAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newsid uint32 `protobuf:"varint,1,opt,name=newsid,proto3" json:"newsid"`
}

func (x *ArticleESAddRequest) Reset() {
	*x = ArticleESAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESAddRequest) ProtoMessage() {}

func (x *ArticleESAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESAddRequest.ProtoReflect.Descriptor instead.
func (*ArticleESAddRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{9}
}

func (x *ArticleESAddRequest) GetNewsid() uint32 {
	if x != nil {
		return x.Newsid
	}
	return 0
}

type ArticleESAddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
}

func (x *ArticleESAddReply) Reset() {
	*x = ArticleESAddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESAddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESAddReply) ProtoMessage() {}

func (x *ArticleESAddReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESAddReply.ProtoReflect.Descriptor instead.
func (*ArticleESAddReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleESAddReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ArticleESDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newsid uint32 `protobuf:"varint,1,opt,name=newsid,proto3" json:"newsid"`
}

func (x *ArticleESDeleteRequest) Reset() {
	*x = ArticleESDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESDeleteRequest) ProtoMessage() {}

func (x *ArticleESDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESDeleteRequest.ProtoReflect.Descriptor instead.
func (*ArticleESDeleteRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{11}
}

func (x *ArticleESDeleteRequest) GetNewsid() uint32 {
	if x != nil {
		return x.Newsid
	}
	return 0
}

type ArticleESDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
}

func (x *ArticleESDeleteReply) Reset() {
	*x = ArticleESDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESDeleteReply) ProtoMessage() {}

func (x *ArticleESDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESDeleteReply.ProtoReflect.Descriptor instead.
func (*ArticleESDeleteReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{12}
}

func (x *ArticleESDeleteReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ArticleESDeleteAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArticleESDeleteAllRequest) Reset() {
	*x = ArticleESDeleteAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESDeleteAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESDeleteAllRequest) ProtoMessage() {}

func (x *ArticleESDeleteAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESDeleteAllRequest.ProtoReflect.Descriptor instead.
func (*ArticleESDeleteAllRequest) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{13}
}

type ArticleESDeleteAllReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status"`
}

func (x *ArticleESDeleteAllReply) Reset() {
	*x = ArticleESDeleteAllReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleESDeleteAllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleESDeleteAllReply) ProtoMessage() {}

func (x *ArticleESDeleteAllReply) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleESDeleteAllReply.ProtoReflect.Descriptor instead.
func (*ArticleESDeleteAllReply) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{14}
}

func (x *ArticleESDeleteAllReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetArticleListReply_Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Url          string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`
	Parentid     uint32 `protobuf:"varint,4,opt,name=parentid,proto3" json:"parentid"`
	BigCatname   string `protobuf:"bytes,5,opt,name=big_catname,json=bigCatname,proto3" json:"big_catname"`
	Catid        uint32 `protobuf:"varint,6,opt,name=catid,proto3" json:"catid"`
	Catname      string `protobuf:"bytes,7,opt,name=catname,proto3" json:"catname"`
	Cover        string `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover"`
	Author       string `protobuf:"bytes,9,opt,name=author,proto3" json:"author"`
	ColumnUrl    string `protobuf:"bytes,10,opt,name=column_url,json=columnUrl,proto3" json:"column_url"`
	Caturl       string `protobuf:"bytes,11,opt,name=caturl,proto3" json:"caturl"`
	BigCaturl    string `protobuf:"bytes,12,opt,name=big_caturl,json=bigCaturl,proto3" json:"big_caturl"`
	PrettifyTime string `protobuf:"bytes,13,opt,name=prettify_time,json=prettifyTime,proto3" json:"prettify_time"`
	UpdateTime   string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time"`
	Ctime        int64  `protobuf:"varint,15,opt,name=ctime,proto3" json:"ctime"`
}

func (x *GetArticleListReply_Article) Reset() {
	*x = GetArticleListReply_Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_it_v1_article_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleListReply_Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleListReply_Article) ProtoMessage() {}

func (x *GetArticleListReply_Article) ProtoReflect() protoreflect.Message {
	mi := &file_it_v1_article_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleListReply_Article.ProtoReflect.Descriptor instead.
func (*GetArticleListReply_Article) Descriptor() ([]byte, []int) {
	return file_it_v1_article_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetArticleListReply_Article) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetArticleListReply_Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticleListReply_Article) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetArticleListReply_Article) GetParentid() uint32 {
	if x != nil {
		return x.Parentid
	}
	return 0
}

func (x *GetArticleListReply_Article) GetBigCatname() string {
	if x != nil {
		return x.BigCatname
	}
	return ""
}

func (x *GetArticleListReply_Article) GetCatid() uint32 {
	if x != nil {
		return x.Catid
	}
	return 0
}

func (x *GetArticleListReply_Article) GetCatname() string {
	if x != nil {
		return x.Catname
	}
	return ""
}

func (x *GetArticleListReply_Article) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *GetArticleListReply_Article) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetArticleListReply_Article) GetColumnUrl() string {
	if x != nil {
		return x.ColumnUrl
	}
	return ""
}

func (x *GetArticleListReply_Article) GetCaturl() string {
	if x != nil {
		return x.Caturl
	}
	return ""
}

func (x *GetArticleListReply_Article) GetBigCaturl() string {
	if x != nil {
		return x.BigCaturl
	}
	return ""
}

func (x *GetArticleListReply_Article) GetPrettifyTime() string {
	if x != nil {
		return x.PrettifyTime
	}
	return ""
}

func (x *GetArticleListReply_Article) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *GetArticleListReply_Article) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

var File_it_v1_article_proto protoreflect.FileDescriptor

var file_it_v1_article_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xdf, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x67, 0x5f, 0x63, 0x61, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x67, 0x43,
	0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x67, 0x43, 0x61, 0x74, 0x75, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x69, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x62, 0x69, 0x67, 0x43, 0x61, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf8,
	0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x1a, 0x92, 0x03, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x67, 0x5f,
	0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x69, 0x67, 0x43, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x61, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x69, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x67, 0x43, 0x61, 0x74, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x74, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x74, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x67, 0x5f, 0x63, 0x61, 0x74, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x69, 0x67, 0x43, 0x61, 0x74, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x31, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x15, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x61, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x28,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x45, 0x53, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x65, 0x77, 0x73, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x45, 0x53, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45,
	0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x65, 0x77, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6e, 0x65, 0x77, 0x73, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x17, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xde, 0x06, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x61, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6d, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x2e, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x73,
	0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x6f, 0x73,
	0x74, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74,
	0x2d, 0x6e, 0x75, 0x6d, 0x2f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x63, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f,
	0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x60, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x41, 0x64, 0x64, 0x12,
	0x1a, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45,
	0x53, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a,
	0x22, 0x0f, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x73, 0x2f, 0x61, 0x64,
	0x64, 0x12, 0x6c, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x76, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a,
	0x01, 0x2a, 0x22, 0x13, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x65, 0x73, 0x2f,
	0x64, 0x65, 0x6c, 0x2d, 0x61, 0x6c, 0x6c, 0x42, 0x11, 0x5a, 0x0f, 0x69, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_it_v1_article_proto_rawDescOnce sync.Once
	file_it_v1_article_proto_rawDescData = file_it_v1_article_proto_rawDesc
)

func file_it_v1_article_proto_rawDescGZIP() []byte {
	file_it_v1_article_proto_rawDescOnce.Do(func() {
		file_it_v1_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_it_v1_article_proto_rawDescData)
	})
	return file_it_v1_article_proto_rawDescData
}

var file_it_v1_article_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_it_v1_article_proto_goTypes = []interface{}{
	(*GetArticleInfoRequest)(nil),       // 0: it.v1.GetArticleInfoRequest
	(*GetArticleInfoReply)(nil),         // 1: it.v1.GetArticleInfoReply
	(*GetArticleListRequest)(nil),       // 2: it.v1.GetArticleListRequest
	(*GetArticleListReply)(nil),         // 3: it.v1.GetArticleListReply
	(*GetColumnArticleRequest)(nil),     // 4: it.v1.GetColumnArticleRequest
	(*UserTodayPostNumRequest)(nil),     // 5: it.v1.UserTodayPostNumRequest
	(*UserTodayPostNumReply)(nil),       // 6: it.v1.UserTodayPostNumReply
	(*CreateArticleRequest)(nil),        // 7: it.v1.CreateArticleRequest
	(*CreateArticleReply)(nil),          // 8: it.v1.CreateArticleReply
	(*ArticleESAddRequest)(nil),         // 9: it.v1.ArticleESAddRequest
	(*ArticleESAddReply)(nil),           // 10: it.v1.ArticleESAddReply
	(*ArticleESDeleteRequest)(nil),      // 11: it.v1.ArticleESDeleteRequest
	(*ArticleESDeleteReply)(nil),        // 12: it.v1.ArticleESDeleteReply
	(*ArticleESDeleteAllRequest)(nil),   // 13: it.v1.ArticleESDeleteAllRequest
	(*ArticleESDeleteAllReply)(nil),     // 14: it.v1.ArticleESDeleteAllReply
	(*GetArticleListReply_Article)(nil), // 15: it.v1.GetArticleListReply.Article
}
var file_it_v1_article_proto_depIdxs = []int32{
	15, // 0: it.v1.GetArticleListReply.list:type_name -> it.v1.GetArticleListReply.Article
	0,  // 1: it.v1.Article.GetArticleInfo:input_type -> it.v1.GetArticleInfoRequest
	2,  // 2: it.v1.Article.GetArticleList:input_type -> it.v1.GetArticleListRequest
	4,  // 3: it.v1.Article.GetCoumnArticleList:input_type -> it.v1.GetColumnArticleRequest
	5,  // 4: it.v1.Article.GetUserTodayPostNum:input_type -> it.v1.UserTodayPostNumRequest
	7,  // 5: it.v1.Article.CreateArticle:input_type -> it.v1.CreateArticleRequest
	9,  // 6: it.v1.Article.ArticleESAdd:input_type -> it.v1.ArticleESAddRequest
	11, // 7: it.v1.Article.ArticleESDelete:input_type -> it.v1.ArticleESDeleteRequest
	13, // 8: it.v1.Article.ArticleESDeleteAll:input_type -> it.v1.ArticleESDeleteAllRequest
	1,  // 9: it.v1.Article.GetArticleInfo:output_type -> it.v1.GetArticleInfoReply
	3,  // 10: it.v1.Article.GetArticleList:output_type -> it.v1.GetArticleListReply
	3,  // 11: it.v1.Article.GetCoumnArticleList:output_type -> it.v1.GetArticleListReply
	6,  // 12: it.v1.Article.GetUserTodayPostNum:output_type -> it.v1.UserTodayPostNumReply
	8,  // 13: it.v1.Article.CreateArticle:output_type -> it.v1.CreateArticleReply
	10, // 14: it.v1.Article.ArticleESAdd:output_type -> it.v1.ArticleESAddReply
	12, // 15: it.v1.Article.ArticleESDelete:output_type -> it.v1.ArticleESDeleteReply
	14, // 16: it.v1.Article.ArticleESDeleteAll:output_type -> it.v1.ArticleESDeleteAllReply
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_it_v1_article_proto_init() }
func file_it_v1_article_proto_init() {
	if File_it_v1_article_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_it_v1_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTodayPostNumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTodayPostNumReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESAddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESDeleteAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleESDeleteAllReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_it_v1_article_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleListReply_Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_it_v1_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_it_v1_article_proto_goTypes,
		DependencyIndexes: file_it_v1_article_proto_depIdxs,
		MessageInfos:      file_it_v1_article_proto_msgTypes,
	}.Build()
	File_it_v1_article_proto = out.File
	file_it_v1_article_proto_rawDesc = nil
	file_it_v1_article_proto_goTypes = nil
	file_it_v1_article_proto_depIdxs = nil
}
